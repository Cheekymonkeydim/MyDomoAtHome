{
  "name": "node-mydomoathome",
  "description": "Rest interface for Domoticz to Imperihome",
  "version": "0.0.47",
  "dependencies": {
    "basic-auth": "1.0.3",
    "body-parser": "^1.5.2",
    "errorhandler": "^1.1.1",
    "express": "^4.8.0",
    "express-session": "^1.7.2",
    "ejs": "^2.4.1",
    "forever": "0.15.1",
    "moment": "^2.10.6",
    "nconf": "^0.8.2",
    "request": "^2.67.0",
    "sync-request": "3.0.0",
    "underscore": "1.4.4",
    "morgan": "^1.6.1",
    "method-override": "^2.1.2",
    "multer": "^0.1.3",
    "winston": "^1.0.1",
    "cors": "^2.7.1"
  },
  "devDependencies": {
    "assert": "^1.3.0",
    "chai": "^3.0.0",
    "grunt": "^0.4.5",
    "grunt-express-server": "^0.5.1",
    "grunt-simple-mocha": "^0.4.0",
    "istanbul": "^0.3.14",
    "mocha": "^2.2.5",
    "should": "^6.0.3",
    "superagent": "^1.2.0",
    "xunit-file": "0.0.6"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/empierre/MyDomoAtHome.git"
  },
  "author": "Emmanuel PIERRE",
  "license": "GPL-2.0",
  "bugs": {
    "url": "https://github.com/empierre/MyDomoAtHome/issues"
  },
  "homepage": "https://github.com/empierre/MyDomoAtHome#readme",
  "main": "mdah.js",
  "scripts": {
    "test": "grunt",
    "start": "nodejs mdah.js"
  },
  "node_deb": {
    "start_command": "nodejs mdah.js"
  },
  "keywords": [
    "Imperihome",
    "Domoticz",
    "ISS",
    "DSM",
    "Synology"
  ],
  "jshintConfig": {
    "node": true,
    "undef": true,
    "noarg": true,
    "white": true,
    "esnext": true,
    "strict": true,
    "newcap": true,
    "nonbsp": true,
    "eqeqeq": true,
    "unused": true,
    "maxlen": 80,
    "indent": 2,
    "bitwise": true,
    "noempty": true,
    "latedef": "nofunc",
    "maxdepth": 5,
    "quotmark": "single",
    "trailing": true,
    "camelcase": true,
    "maxparams": 8,
    "globalstrict": true,
    "maxcomplexity": 10,
    "maxstatements": 40,
    "predef": [
      "ApiError",
      "ActErr",
      "logger",
      "util",
      "sendErrorAndLog",
      "shipError",
      "sendJSONResponse",
      "config",
      "MessageTypes",
      "safeGet"
    ]
  }
}
